# *** IR Dump After Live DEBUG_VALUE analysis (livedebugvalues) ***:
# Machine code for function _Z4testii: NoPHIs, TracksLiveness, NoVRegs, TiedOpsRewritten, TracksDebugUserValues
Frame Objects:
  fi#0: size=4, align=4, at location [SP-4]
  fi#1: size=4, align=4, at location [SP-8]
Function Live Ins: $r1, $r2

bb.0.entry:
  successors: %bb.2(0x40000000), %bb.1(0x40000000); %bb.2(50.00%), %bb.1(50.00%)
  liveins: $r1, $r2
  $r0 = MOV_rr $r1
  STW $r2, $r10, -8 :: (store (s32) into %ir.b.addr, !tbaa !3)
  STW $r0, $r10, -4 :: (store (s32) into %ir.a.addr, !tbaa !3)
  $r2 = SLL_ri killed $r2(tied-def 0), 32
  $r2 = SRA_ri killed $r2(tied-def 0), 32
  $r1 = SLL_ri killed $r1(tied-def 0), 32
  $r1 = SRA_ri killed $r1(tied-def 0), 32
  JSGT_rr killed $r1, killed $r2, %bb.2

bb.1.if.end:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)

  $r1 = MOV_rr $r10
  $r1 = ADD_ri $r1(tied-def 0), -4
  $r2 = MOV_rr $r10
  $r2 = ADD_ri $r2(tied-def 0), -8
  JAL @_Z4swapRiS_, implicit-def dead $r0, implicit-def dead $r1, implicit-def dead $r2, implicit-def dead $r3, implicit-def dead $r4, implicit-def dead $r5, implicit $r11, implicit $r1, implicit $r2
  $r0 = LDW $r10, -4 :: (dereferenceable load (s32) from %ir.a.addr, !tbaa !3)

bb.2.return:
; predecessors: %bb.0, %bb.1
  liveins: $r0
  RET implicit $r0

# End machine code for function _Z4testii.
